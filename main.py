import os
import logging
from flask import Flask, request
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# üîê –¢–í–û–ô –¢–û–ö–ï–ù
BOT_TOKEN = "6452431495:AAHDbGpA-TeEB7e2q9iZ7JZ_zkFGLkP7fco"
WEBHOOK_URL = "https://botupgraid.onrender.com/webhook"

# üîß –õ–û–ì–ò
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# üåê Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
app_telegram = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–¥ Application

# üîÅ /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info("‚úÖ –ü–æ–ª—É—á–µ–Ω /start")
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Webhook!")

# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
@app.route("/webhook", methods=["POST"])
async def webhook():
    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), app_telegram.bot)
        await app_telegram.process_update(update)
        return "ok"
    return "not allowed", 405

# üèÅ –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ / –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
@app.route("/", methods=["GET"])
def home():
    return "‚úÖ –°–µ—Ä–≤–∏—Å Telegram-–±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# üöÄ –°—Ç–∞—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    import asyncio
    from telegram.ext import Application

    app_telegram = ApplicationBuilder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app_telegram.add_handler(CommandHandler("start", start))

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)
    async def set_webhook():
        success = await app_telegram.bot.set_webhook(WEBHOOK_URL)
        if success:
            logging.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
        else:
            logging.error("‚ùå Webhook –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")

    # –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Webhook
    loop = asyncio.get_event_loop()
    loop.run_until_complete(set_webhook())

    # –ó–∞–ø—É—Å–∫ Flask –Ω–∞ –ø–æ—Ä—Ç—É 10000
    app.run(host="0.0.0.0", port=10000)