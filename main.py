from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from strategies import generate_signals
import asyncio

# --- –¢–æ–∫–µ–Ω Telegram ---
TOKEN = "7753750626:AAECEmbPksDUXV1KXrAgwE6AO1wZxdCMxVo"

# --- Flask ---
app = Flask(__name__)

@app.route("/")
def index():
    return "‚úÖ –ë–æ—Ç –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞—é—Ç"

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

# --- –ö–æ–º–∞–Ω–¥–∞ /signal ---
async def signal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    signals, explanation, timestamp = generate_signals()
    text = f"üìä –°–∏–≥–Ω–∞–ª—ã –Ω–∞ {timestamp}:\n\n"
    for pair, sig in signals.items():
        reason = explanation.get(pair, "")
        text += f"‚Ä¢ {pair}: {sig} ‚Äî {reason}\n"
    await update.message.reply_text(text)

# --- –ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ ---
async def main():
    app_bot = ApplicationBuilder().token(TOKEN).build()
    app_bot.add_handler(CommandHandler("start", start))
    app_bot.add_handler(CommandHandler("signal", signal))

    # –ó–∞–ø—É—Å–∫ Flask –≤ —Ñ–æ–Ω–µ
    loop = asyncio.get_event_loop()
    loop.create_task(asyncio.to_thread(app.run, host="0.0.0.0", port=10000))

    # –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
    await app_bot.run_polling()

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    asyncio.run(main())